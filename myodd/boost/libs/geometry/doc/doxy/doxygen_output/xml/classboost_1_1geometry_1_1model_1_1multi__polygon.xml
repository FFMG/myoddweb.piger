<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classboost_1_1geometry_1_1model_1_1multi__polygon" kind="class" prot="public">
    <compoundname>boost::geometry::model::multi_polygon</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Container&lt; Polygon, Allocator&lt; Polygon &gt; &gt;</basecompoundref>
    <includes local="no">multi_polygon.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Polygon</type>
      </param>
      <param>
        <type>template&lt; typename, typename &gt; class</type>
        <declname>Container</declname>
        <defname>Container</defname>
        <defval>std::vector</defval>
      </param>
      <param>
        <type>template&lt; typename &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval>std::allocator</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1model_1_1multi__polygon_1ab1696fd7e5e66c4e8deb1f3466299b74" prot="private" static="no">
        <type>Container&lt; Polygon, Allocator&lt; Polygon &gt; &gt;</type>
        <definition>typedef Container&lt;Polygon, Allocator&lt;Polygon&gt; &gt; boost::geometry::model::multi_polygon&lt; Polygon, Container, Allocator &gt;::base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" line="64" column="1" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1model_1_1multi__polygon_1a72287f2cf31374b97f6ba4fbff2daecb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::model::multi_polygon&lt; Polygon, Container, Allocator &gt;::BOOST_CONCEPT_ASSERT</definition>
        <argsstring>((concepts::Polygon&lt; Polygon &gt;))</argsstring>
        <name>BOOST_CONCEPT_ASSERT</name>
        <param>
          <type>(<ref refid="classboost_1_1geometry_1_1concepts_1_1_polygon" kindref="compound">concepts::Polygon</ref>&lt; Polygon &gt;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" line="57" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1model_1_1multi__polygon_1ac1410fc60a6af27d5956aa60d57b71f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::model::multi_polygon&lt; Polygon, Container, Allocator &gt;::multi_polygon</definition>
        <argsstring>()</argsstring>
        <name>multi_polygon</name>
        <briefdescription>
<para>Default constructor, creating an empty <ref refid="classboost_1_1geometry_1_1model_1_1multi__polygon" kindref="compound">multi_polygon</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" line="68" column="1" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1model_1_1multi__polygon_1a90758f0fd28644a647efb91092ad811a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::model::multi_polygon&lt; Polygon, Container, Allocator &gt;::multi_polygon</definition>
        <argsstring>(std::initializer_list&lt; Polygon &gt; l)</argsstring>
        <name>multi_polygon</name>
        <param>
          <type>std::initializer_list&lt; Polygon &gt;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Constructor taking std::initializer_list, filling the <ref refid="classboost_1_1geometry_1_1model_1_1multi__polygon" kindref="compound">multi_polygon</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" line="73" column="1" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classboost_1_1geometry_1_1model_1_1multi__polygon" kindref="compound">multi_polygon</ref>, a collection of polygons </para>    </briefdescription>
    <detaileddescription>
<para>Multi-polygon can be used to group polygons belonging to each other, e.g. Hawaii</para><para> <qbk>[include reference/geometries/multi_polygon.qbk]</qbk>   <qbk.before.synopsis>
[heading Model of]
[link geometry.reference.concepts.concept_multi_polygon MultiPolygon Concept]
</qbk.before.synopsis>  </para>    </detaileddescription>
    <inheritancegraph>
      <node id="518">
        <label>boost::geometry::model::multi_polygon&lt; Polygon, Container, Allocator &gt;</label>
        <link refid="classboost_1_1geometry_1_1model_1_1multi__polygon"/>
        <childnode refid="519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="519">
        <label>Container&lt; Polygon, Allocator&lt; Polygon &gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="520">
        <label>boost::geometry::model::multi_polygon&lt; Polygon, Container, Allocator &gt;</label>
        <link refid="classboost_1_1geometry_1_1model_1_1multi__polygon"/>
        <childnode refid="521" relation="public-inheritance">
        </childnode>
      </node>
      <node id="521">
        <label>Container&lt; Polygon, Allocator&lt; Polygon &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" line="56" column="1" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/multi_polygon.hpp" bodystart="55" bodyend="91"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1model_1_1multi__polygon_1ab1696fd7e5e66c4e8deb1f3466299b74" prot="private" virt="non-virtual"><scope>boost::geometry::model::multi_polygon</scope><name>base_type</name></member>
      <member refid="classboost_1_1geometry_1_1model_1_1multi__polygon_1a72287f2cf31374b97f6ba4fbff2daecb" prot="private" virt="non-virtual"><scope>boost::geometry::model::multi_polygon</scope><name>BOOST_CONCEPT_ASSERT</name></member>
      <member refid="classboost_1_1geometry_1_1model_1_1multi__polygon_1ac1410fc60a6af27d5956aa60d57b71f5" prot="public" virt="non-virtual"><scope>boost::geometry::model::multi_polygon</scope><name>multi_polygon</name></member>
      <member refid="classboost_1_1geometry_1_1model_1_1multi__polygon_1a90758f0fd28644a647efb91092ad811a" prot="public" virt="non-virtual"><scope>boost::geometry::model::multi_polygon</scope><name>multi_polygon</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
