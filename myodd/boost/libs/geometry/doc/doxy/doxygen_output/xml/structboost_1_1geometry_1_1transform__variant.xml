<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structboost_1_1geometry_1_1transform__variant" kind="struct" prot="public">
    <compoundname>boost::geometry::transform_variant</compoundname>
    <basecompoundref prot="public" virt="non-virtual">make_variant_over&lt; boost::mpl::transform&lt; Sequence, Op, In &gt;::type &gt;</basecompoundref>
    <includes local="no">transform_variant.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Sequence</type>
      </param>
      <param>
        <type>typename Op</type>
      </param>
      <param>
        <type>typename In</type>
        <defval>boost::mpl::na</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Meta-function that takes a Sequence type, an MPL lambda expression and an optional Inserter and returns a variant type over the same types as the initial variant type, each transformed using the lambda expression. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::vector&lt;int,<sp/>float,<sp/>long&gt;<sp/>types;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>transform_variant&lt;types,<sp/>add_pointer&lt;_&gt;<sp/>&gt;<sp/>transformed;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>variant&lt;int*,<sp/>float*,<sp/>long*&gt;<sp/>result;</highlight></codeline>
<codeline><highlight class="normal">BOOST_MPL_ASSERT((<sp/>equal&lt;result,<sp/>transformed&gt;<sp/>));</highlight></codeline>
</programlisting> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1769">
        <label>boost::geometry::transform_variant&lt; Sequence, Op, In &gt;</label>
        <link refid="structboost_1_1geometry_1_1transform__variant"/>
        <childnode refid="1770" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1770">
        <label>make_variant_over&lt; boost::mpl::transform&lt; Sequence, Op, In &gt;::type &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1771">
        <label>boost::geometry::transform_variant&lt; Sequence, Op, In &gt;</label>
        <link refid="structboost_1_1geometry_1_1transform__variant"/>
        <childnode refid="1772" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1772">
        <label>make_variant_over&lt; boost::mpl::transform&lt; Sequence, Op, In &gt;::type &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/util/transform_variant.hpp" line="54" column="1" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/util/transform_variant.hpp" bodystart="46" bodyend="54"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
