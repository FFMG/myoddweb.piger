<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structboost_1_1geometry_1_1distance__result" kind="struct" prot="public">
    <compoundname>boost::geometry::distance_result</compoundname>
    <basecompoundref refid="structboost_1_1geometry_1_1resolve__variant_1_1distance__result" prot="public" virt="non-virtual">boost::geometry::resolve_variant::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</basecompoundref>
    <derivedcompoundref refid="structboost_1_1geometry_1_1distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4" prot="public" virt="non-virtual">boost::geometry::distance_result&lt; Geometry1, Geometry2, void &gt;</derivedcompoundref>
    <includes local="no">distance_result.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Geometry1</declname>
        <defname>Geometry1</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Geometry2</declname>
        <defname>Geometry2</defname>
        <defval>Geometry1</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>Strategy</declname>
        <defname>Strategy</defname>
        <defval>void</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Meta-function defining return type of distance function. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The strategy defines the return-type (so this situation is different from length, where distance is sqr/sqrt, but length always squared) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="333">
        <label>boost::geometry::resolve_variant::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__variant_1_1distance__result"/>
        <childnode refid="334" relation="public-inheritance">
        </childnode>
      </node>
      <node id="336">
        <label>boost::geometry::distance_result&lt; Geometry1, Geometry2, void &gt;</label>
        <link refid="structboost_1_1geometry_1_1distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4"/>
        <childnode refid="332" relation="public-inheritance">
        </childnode>
      </node>
      <node id="337">
        <label>boost::geometry::default_distance_result&lt; Geometry1, Geometry2 &gt;</label>
        <link refid="structboost_1_1geometry_1_1default__distance__result"/>
        <childnode refid="336" relation="public-inheritance">
        </childnode>
      </node>
      <node id="334">
        <label>boost::geometry::resolve_strategy::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1distance__result"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="332">
        <label>boost::geometry::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1distance__result"/>
        <childnode refid="333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="335">
        <label>boost::geometry::strategy::distance::services::return_type&lt; Strategy, point_type&lt; Geometry1 &gt;::type, point_type&lt; Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="339">
        <label>boost::geometry::resolve_variant::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__variant_1_1distance__result"/>
        <childnode refid="340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="340">
        <label>boost::geometry::resolve_strategy::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1distance__result"/>
        <childnode refid="341" relation="public-inheritance">
        </childnode>
      </node>
      <node id="338">
        <label>boost::geometry::distance_result&lt; Geometry1, Geometry2, Strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1distance__result"/>
        <childnode refid="339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="341">
        <label>boost::geometry::strategy::distance::services::return_type&lt; Strategy, point_type&lt; Geometry1 &gt;::type, point_type&lt; Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/distance_result.hpp" line="201" column="1" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/distance_result.hpp" bodystart="199" bodyend="201"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type_1aaa63d9f53da472aa093e480ae634b79c" prot="public" virt="non-virtual"><scope>boost::geometry::distance_result</scope><name>BOOST_MPL_ASSERT_MSG</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
