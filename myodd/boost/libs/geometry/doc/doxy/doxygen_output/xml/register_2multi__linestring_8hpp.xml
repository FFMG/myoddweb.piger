<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="register_2multi__linestring_8hpp" kind="file">
    <compoundname>multi_linestring.hpp</compoundname>
    <includes refid="tag_8hpp" local="no">boost/geometry/core/tag.hpp</includes>
    <includes refid="core_2tags_8hpp" local="no">boost/geometry/core/tags.hpp</includes>
    <incdepgraph>
      <node id="55700">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="55702">
        <label>boost/type_traits/remove_reference.hpp</label>
      </node>
      <node id="55698">
        <label>boost/geometry/core/tags.hpp</label>
        <link refid="core_2tags_8hpp"/>
      </node>
      <node id="55696">
        <label>/home/travis/build/boostorg/boost/boost/geometry/geometries/register/multi_linestring.hpp</label>
        <link refid="register/multi_linestring.hpp"/>
        <childnode refid="55697" relation="include">
        </childnode>
        <childnode refid="55698" relation="include">
        </childnode>
      </node>
      <node id="55697">
        <label>boost/geometry/core/tag.hpp</label>
        <link refid="tag_8hpp"/>
        <childnode refid="55698" relation="include">
        </childnode>
        <childnode refid="55699" relation="include">
        </childnode>
      </node>
      <node id="55699">
        <label>boost/geometry/util/bare_type.hpp</label>
        <link refid="bare__type_8hpp"/>
        <childnode refid="55700" relation="include">
        </childnode>
        <childnode refid="55701" relation="include">
        </childnode>
        <childnode refid="55702" relation="include">
        </childnode>
      </node>
      <node id="55701">
        <label>boost/type_traits/remove_pointer.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__register_1ga9023e4db92faf3052f86697d6efa21a2" prot="public" static="no">
        <name>BOOST_GEOMETRY_REGISTER_MULTI_LINESTRING</name>
        <param><defname>MultiLineString</defname></param>
        <initializer>namespace boost { namespace geometry { namespace traits {  \
    template&lt;&gt; struct tag&lt;MultiLineString&gt; { typedef multi_linestring_tag type; }; \
}}}</initializer>
        <briefdescription>
<para>Macro to register a multi_linestring. </para>        </briefdescription>
        <detaileddescription>
<para>The macro BOOST_GEOMETRY_REGISTER_MULTI_LINESTRING registers a multi_linestring such that it is recognized by Boost.Geometry and that Boost.Geometry functionality can used with the specified type. The multi_linestring may contain template parameters, which must be specified then. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MultiLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>multi_linestring type to be registered</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>
[heading Example]
[register_multi_linestring]
[register_multi_linestring_output]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/multi_linestring.hpp" line="34" column="9" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/multi_linestring.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__register_1ga8173f4872543ac051ef41f638de05786" prot="public" static="no">
        <name>BOOST_GEOMETRY_REGISTER_MULTI_LINESTRING_TEMPLATED</name>
        <param><defname>MultiLineString</defname></param>
        <initializer>namespace boost { namespace geometry { namespace traits {  \
    template&lt;typename LineString&gt; struct tag&lt; MultiLineString&lt;LineString&gt; &gt; { typedef multi_linestring_tag type; }; \
}}}</initializer>
        <briefdescription>
<para>Macro to register a templated multi_linestring. </para>        </briefdescription>
        <detaileddescription>
<para>The macro BOOST_GEOMETRY_REGISTER_MULTI_LINESTRING_TEMPLATED registers a templated multi_linestring such that it is recognized by Boost.Geometry and that Boost.Geometry functionality can used with the specified type. The type must have one template parameter, which should be a linestring type, and should not be specified. Boost.Geometry takes care of inserting the template parameter. Hence all types of this templated multi_linestring are registered, regardless of their point type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MultiLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>multi_linestring (without template parameters) type to be registered</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>
[heading Example]
[register_multi_linestring_templated]
[register_multi_linestring_templated_output]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/multi_linestring.hpp" line="53" column="9" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/multi_linestring.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/multi_linestring.hpp"/>
  </compounddef>
</doxygen>
